from dataclasses import dataclass
from datetime import datetime


@dataclass(frozen=True)
class MarketDataPoint:
    """Class for keeping track of an item in inventory."""
    timestamp: datetime
    symbol: str
    price: float

# Immutable dataclass: represents a trading signal generated by a strategy
@dataclass(frozen=True)
class Signal:
    timestamp: datetime   # when the signal was generated
    symbol: str           # stock symbol
    side: str             # "BUY" or "SELL"
    qty: int              # how many shares to trade
    reason: str = ""      # optional text explaining why the signal was created


class Order:
    def __init__(self, symbol: str, quantity: int, price: float, status: str):
        self._symbol = symbol
        self._quantity = quantity
        self._price = price
        self._status = status

    # setter and getter 
    @property
    def symbol(self):
        return self._symbol
    @property
    def quantity(self):
        return self._quantity
    @property
    def price(self):
        return self._price
    @property
    def status(self):
        return self._status
    @status.setter
    def status(self, value):
        self._status = value

